(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{335:function(n,t,e){"use strict";e.r(t);var o=e(18),s=Object(o.a)({},(function(){var n=this.$createElement,t=this._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("p",[this._v("利用aspect实现")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('package com.ud.bms.demo.oauth2;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.security.oauth2.common.OAuth2AccessToken;\nimport org.springframework.stereotype.Component;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Objects;\n\n/**\n * < /auth/token  自定义 返回数据格式>\n *\n * @author : wk\n * @version : 1.0\n * @since : 2020/2/11 13:44\n * Company : Beijing Tepia (Wuhan R&D Center)\n */\n@Component\n@Aspect\n@Slf4j\npublic class CustomOAuth2AccessTokenAspect {\n    @Around("execution(* org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(..))")\n    public Object handle(ProceedingJoinPoint pjp) {\n\n        Map<String, Object> response = new HashMap<>();\n        try {\n            Object proceed = pjp.proceed();\n\n            Integer code = 0;\n            String msg = "";\n\n            ResponseEntity<OAuth2AccessToken> responseEntity;\n            if (Objects.nonNull(proceed) && (responseEntity = (ResponseEntity<OAuth2AccessToken>) proceed).getStatusCode().is2xxSuccessful()) {\n                response.put("data", responseEntity.getBody());\n            } else {\n                code = 1;\n                msg = "授权失败";\n            }\n            response.put("code", code);\n            response.put("msg", msg);\n            return ResponseEntity\n                    .status(HttpStatus.OK)\n                    .body(response);\n\n        } catch (Throwable throwable) {\n            log.error("", throwable);\n        }\n\n        response.put("code", 1);\n        response.put("msg", "出现异常，授权失败");\n        return ResponseEntity.status(HttpStatus.OK).body(response);\n    }\n}\n\n\n')])])])])}),[],!1,null,null,null);t.default=s.exports}}]);